#!/bin/bash

set -f

function expand_numbers() {
  local start=0

  if [ ! -z $3 ]; then
    start=$3
  fi
  if [[ "$1" =~ ^((0?([0-9]{1,2}))|((0?([0-9]{1,2}))(-)(0?([0-9]{1,2})))|(\*)|((\*)/([0-9]{1,2})))$ ]];
  then
    if [ ${BASH_REMATCH[1]} == "*" ]; then
      echo "[0-9]{1,2}"
    fi
    if [ ! -z "${BASH_REMATCH[3]}" ]; then
      echo ${BASH_REMATCH[3]}
    fi
    if [[ ${BASH_REMATCH[7]} == "-" ]]; then
      for ((i=${BASH_REMATCH[6]};i<=${BASH_REMATCH[9]};i++)); do
        echo $i
      done
    fi
    if [ ! -z "${BASH_REMATCH[13]}" ]; then
      for ((i=$start;i<=$2;i++)); do
        if [ $(($i % ${BASH_REMATCH[13]})) == "0" ]; then
          echo $i
        fi
      done
    fi
  else
    echo "ERROR"
  fi
}

function handle_comma {
  local IFS=','
  for x in $1; do
    expand_numbers $x $2 $3
  done
}

function reg_or { local IFS="|"; echo "$*"; }

function numbers_to_regex {
  echo "("$(reg_or $(handle_comma "$1" "$2" $3))")"
}

function handle_line {
  if [[ "$1" =~ ^([0123456789,*/-]+)[[:blank:]]+([0123456789*/-]+)[[:blank:]]+([0123456789*/-]+)[[:blank:]]+([0123456789*/-]+)[[:blank:]]+([0123456789*/-]+)[[:blank:]]+(.*)$ ]];
  then
    local C=${BASH_REMATCH[6]}
    A="$(numbers_to_regex ${BASH_REMATCH[1]} 59):%-M $(numbers_to_regex ${BASH_REMATCH[2]} 23):%-k $(numbers_to_regex ${BASH_REMATCH[3]} 31 1):%-d $(numbers_to_regex ${BASH_REMATCH[4]} 12 1):%-m $(numbers_to_regex ${BASH_REMATCH[5]} 6):%w"
    local IFS=' '
    local DATE=""
    local REGEX=""
    for I in $A; do
      B=(${I//:/ })
      # echo "A ${B[0]} B ${B[1]}"
      if [ ${B[0]} != "([0-9]{1,2})" ]; then
        local DATE="$DATE${B[1]} "
        local REGEX="$REGEX${B[0]} "
      fi
    done
    if [ -n "$DATE" ]; then
      echo "if [[ \$(date +\"${DATE%% }\") =~ ^(${REGEX%% })\$ ]]; then (${C}) & fi"
    else
      echo "(${C}) &"
    fi
  else
    echo "# $1"
  fi
}

function main {
  echo "#!/bin/bash"
  echo "while true; do"
  echo "  sleep \$(expr 60 - \$(date +%S))"
  while read LINE; do
    echo "  "$(handle_line "$LINE")
  done
  echo "done"
}

if [ "$1" == "-e" ]; then
  echo "$(main)" | "$BASH"
else
  main
fi
